//CSS 属性
export const Propertys = {
    A: [
        { code: 'abs()', desc: 'CSS 函数，返回参数的绝对值', lang: 'en-US', linkParam: 'abs' },
        { code: 'accent-color', desc: '为某些元素生成控件设置强调色', lang: 'en-US' },
        { code: 'acos()', desc: 'CSS 三角函数返回介于 -1 和 1 之间的数的反余弦值此函数含有单个计算式，此式返回表示介于 0deg 和 180deg 之的  `<angle>` 的弧度数' },
        { code: ':active', desc: '伪类，匹配被用户激活的元素' },
        { code: 'additive-symbols', desc: '描述符定义符号，用于值可累积的可数的 system (en-US)的项', linkParam: '@counter-style/additive-symbols' },
        { code: '::after(:after)', desc: '伪元素，作为已选中元素的最后一个子元素，通常会配合 `content` 属性来为该元素添加装饰内容', linkParam: '::after' },
        { code: 'align-content', desc: '设置了沿弹性盒子布局的纵轴和网格布局的主轴在内容项之间和周围分配空间' },
        { code: 'align-items', desc: '将所有直接子节点上的 `align-self` 值设置为一个组' },
        { code: 'align-self', desc: '对齐当前 grid（块轴） 或 flex 行中（垂直轴）的元素，并覆盖已有的 `align-items` 的值' },
        { code: 'align-tracks', desc: '设置块轴上具有砌体的网格容器砌体轴的对齐方式', lang: 'en-US' },
        { code: 'all', desc: ' 简写属性，将除了 `unicode-bidi` 与 `direction` 之外的所有属性重设至其初始值，或继承值' },
        { code: '<angle>', desc: 'CSS 数据类型，用于表示角的大小，单位为度 `deg`、百分度 `grad`、弧度 `rad` 或圈数 `turn` ', linkParam: 'angle' },
        { code: '<angle-percentage>', desc: 'CSS 数据类型，代表了一种既可以是 `angle` ，也可以是 `percentage` 的数据类型', linkParam: 'angle-percentage' },
        { code: 'animation', desc: 'CSS 动画属性，所有 CSS 动画属性的简写属性形式' },
        { code: 'animation-composition', desc: 'CSS 动画属性，指定当多个动画同时影响同一个属性时要使用的复合操作', lang: 'en-US' },
        { code: 'animation-delay', desc: 'CSS 动画属性，指定从应用动画到元素开始执行动画之前等待的时间量' },
        { code: 'animation-direction', desc: 'CSS 动画属性，设置动画是应正向播放、反向播放还是在正向和反向之间交替播放' },
        { code: 'animation-duration', desc: 'CSS 动画属性，设置动画完成一个动画周期所需的时间' },
        { code: 'animation-fill-mode', desc: 'CSS 动画属性，设置 CSS 动画在执行之前和之后如何将样式应用于其目标' },
        { code: 'animation-iteration-count', desc: 'CSS 动画属性，设置动画序列在停止前应播放的次数' },
        { code: 'animation-name', desc: 'CSS 动画属性，指定一个或多个 `@keyframes` at-rule 的名称，这些 at-rule 描述了要应用于元素的动画' },
        { code: 'animation-play-state', desc: 'CSS 动画属性，设置动画是运行还是暂停' },
        { code: 'animation-timeline', desc: 'CSS 动画属性，指定用于控制动画进度的时间线', lang: 'en-US' },
        { code: 'animation-timing-function', desc: 'CSS 动画属性，定义 CSS 动画在每一动画周期中执行的节奏' },
        { code: '@annotation', desc: '@注解，允许作者在 `font-variant-alternates` 中使用通用名称，用于在 OpenType 中以不同方式激活功能。它允许在使用几种字体时简化 CSS', linkParam: '@font-feature-values#@annotation' },
        { code: 'annotation()', desc: '控制备用字体的使用。这些替代字体可以通过@font-feature-values中定义的替代名称来引用', linkParam: 'font-variant-alternates#annotation()' },
        { code: 'appearance', desc: '用于控制 UI 控件的基于操作系统主题的原生外观' },
        { code: 'ascent-override', desc: '定义字体的上升度量。 ascent 指标是 CSS 用于在内联格式化上下文中布置行框的基线以上的高度', lang: 'en-US', linkParam: '@font-face/ascent-override' },
        { code: 'asin()', desc: 'CSS 函数，返回介于 -1 和 1 之间的数的反正弦值。此函数含有单个计算式，此式返回表示介于 -90deg 和 90deg 之间的 `<angle>` 的弧度数' },
        { code: 'aspect-ratio', desc: '规定盒子首选纵横比，这个纵横比可以用于计算 auto 尺寸以及其他布局函数' },
        { code: 'atan()', desc: 'CSS 函数，返回介于 -∞ 和 +∞ 之间的数的反正切值。此函数含有单个计算式，此式返回表示介于 -90deg 和 90deg 之间的 `<angle>` 的弧度数' },
        { code: 'atan2()', desc: 'CSS 函数，返回介于 -infinity 和 infinity 之间的两值的反正切值。此函数接受两个参数，返回表示介于 -180deg 和 180deg 之间的 `<angle>` 的弧度数' },
        { code: 'attr()', desc: 'CSS 函数，用来获取选择到的元素的某一 HTML 属性值，并用于其样式' },
    ],
    B: [
        { code: '::backdrop', desc: '伪元素，在任何处于全屏模式的元素下的即刻渲染的盒子' },
        { code: 'backdrop-filter', desc: '为一个元素后面区域添加图形效果（如模糊或颜色偏移）。因为它适用于元素背后的所有元素，为了看到效果，必须使元素或其背景至少部分透明' },
        { code: 'backface-visibility', desc: '指定当元素背面朝向观察者时是否可见' },
        { code: 'background', desc: ' CSS 简写属性，用于一次性集中定义各种背景属性' },
        { code: 'background-attachment', desc: '决定背景图像的位置是在视口内固定，或者随着包含它的区块滚动' },
        { code: 'background-blend-mode', desc: '定义该元素的背景图片，以及背景色如何混合' },
        { code: 'background-clip', desc: '设置元素的背景（背景图片或颜色）是否延伸到边框、内边距盒子、内容盒子下面' },
        { code: 'background-color', desc: '设置元素的背景色，属性的值为颜色值或关键字 `transparent` 二者选其一' },
        { code: 'background-image', desc: '为一个元素设置一个或者多个背景图像' },
        { code: 'background-origin', desc: '规定了指定背景图片 `background-image` 属性的原点位置的背景相对区域' },
        { code: 'background-position', desc: '为每一个背景图片设置初始位置。这个位置是相对于由 `background-origin` 定义的位置图层的' },
        { code: 'background-position-x', desc: '设置水平方向的位置，与每个背景图片等位置层设置属性 `background-origin` 相关' },
        { code: 'background-position-y', desc: '设置初始状态时背景图片在垂直方向上的位置，这个位置相对于通过 `background-origin` 定义的背景层的原点进行定位' },
        { code: 'background-repeat', desc: '定义背景图像的重复方式。背景图像可以沿着水平轴，垂直轴，两个轴重复，或者根本不重复' },
        { code: 'background-size', desc: '设置背景图片大小' },
        { code: '<basic-shape>', desc: '表现基础图形的 CSS 数据类型，作用于 `clip-path` 与 `shape-outside` 属性中' },
        { code: '::before(:before)', desc: '伪元素，匹配选中的元素的第一个子元素。常通过 `content` 属性来为一个元素添加修饰性的内容。此元素默认为行内元素', linkParam: '::before' },
        { code: ':blank', desc: '伪类，选择用户输入为空的输入框' },
        { code: '<blend-mode>', desc: 'CSS 数据类型，用于描述当元素重叠时，颜色应当如何呈现。它被用于 `background-blend-mode` 和 `mix-blend-mode` 属性' },
        { code: 'block-size', desc: '根据元素的书写模式定义了元素块的横向或纵向尺寸' },
        { code: 'blur()', desc: 'CSS 方法，将高斯模糊应用于输出图片', linkParam: 'filter-function/blur' },
        { code: 'border', desc: '设置各种单独的边界属性的简写属性' },
        { code: 'border-block', desc: 'CSS 简写属性，用于在样式表中的某处同时设置逻辑块向边框的各属性值' },
        { code: 'border-block-color', desc: '定义了元素的逻辑块向的边框颜色' },
        { code: 'border-block-end', desc: 'CSS 简写属性，在样式表中的某处同时设置逻辑块末边框的各属性值' },
        { code: 'border-block-end-color', desc: '定义了元素的逻辑块末的边框颜色，并根据元素的书写模式、行内方向和文本朝向对应至实体边框颜色' },
        { code: 'border-block-end-style', desc: '定义了元素的逻辑块末的边框线型，并根据元素的书写模式、行内方向和文本朝向对应至实体边框线型' },
        { code: 'border-block-end-width', desc: '定义了元素的逻辑块末的边框宽度，并根据元素的书写模式、行内方向和文本朝向对应至实体边框宽度' },
        { code: 'border-block-start', desc: 'CSS 简写属性，用于在样式表中的某处同时设置逻辑块首边框的各属性值' },
        { code: 'border-block-start-color', desc: '定义了元素的逻辑块首的边框颜色，并根据元素的书写模式、行内方向和文本朝向对应至实体边框颜色' },
        { code: 'border-block-start-style', desc: '定义了元素的逻辑块首的边框线型，并根据元素的书写模式、行内方向和文本朝向对应至实体边框线型' },
        { code: 'border-block-start-width', desc: '定义了元素的逻辑块首的边框宽度，并根据元素的书写模式、行内方向和文本朝向对应至实体边框宽度' },
        { code: 'border-block-style', desc: '定义了元素的逻辑块向的边框线型，并根据元素的书写模式、行内方向和文本朝向对应至实体边框线型' },
        { code: 'border-block-width', desc: '定义了元素的逻辑块向的边框宽度，并根据元素的书写模式、行内方向和文本朝向对应至实体边框宽度' },
        { code: 'border-bottom', desc: 'CSS 简写属性，设置元素下边框' },
        { code: 'border-bottom-color', desc: '设置一个元素底部边框的颜色' },
        { code: 'border-bottom-left-radius', desc: '设置元素左下角的圆角' },
        { code: 'border-bottom-right-radius', desc: '设置元素右下角的圆角' },
        { code: 'border-bottom-style', desc: '设置元素底部边框的线条样式' },
        { code: 'border-bottom-width', desc: '设置元素的底部边框宽度' },
        { code: 'border-collapse', desc: '设置表格的边框是分开的还是合并的' },
        { code: 'border-color', desc: 'CSS 简写属性，设置元素四个边框颜色' },
        { code: 'border-end-end-radius', desc: '定义了元素的逻辑边框半径，并根据元素的书写模式、行内方向和文本朝向对应至实体边框半径' },
        { code: 'border-end-start-radius', desc: '定义了元素的逻辑边框半径，并根据元素的书写模式、行内方向和文本朝向对应至实体边框半径' },
        { code: 'border-image', desc: '为元素的边框设置图像样式' },
        { code: 'border-image-outset', desc: '定义边框图像可超出边框盒的大小' },
        { code: 'border-image-repeat', desc: '定义图片如何填充边框' },
        { code: 'border-image-slice', desc: '将使用 `border-image-source` 引用的图像划分为多个区域' },
        { code: 'border-image-source', desc: '声明元素的边框图片 `border-image` 的资源' },
        { code: 'border-image-width', desc: '指定了 `border image` 的宽度' },
        { code: 'border-inline', desc: 'CSS 简写属性，用于在样式表中的某处同时设置逻辑行向边框的各属性值' },
        { code: 'border-inline-color', desc: ' 定义了元素的逻辑行向的边框颜色，并根据元素的书写模式、行内方向和文本朝向对应至实体边框颜色' },
        { code: 'border-inline-end', desc: 'CSS 简写属性，用于在样式表中的某处同时设置逻辑行末边框的各属性值' },
        { code: 'border-inline-end-color', desc: '定义了元素的逻辑行末的边框颜色，并根据元素的书写模式、行内方向和文本朝向对应至实体边框颜色' },
        { code: 'border-inline-end-style', desc: '定义了元素的逻辑行末的边框线型，并根据元素的书写模式、行内方向和文本朝向对应至实体边框线型' },
        { code: 'border-inline-end-width', desc: '定义了元素的逻辑行末的边框宽度，并根据元素的书写模式、行内方向和文本朝向对应至实体边框宽度' },
        { code: 'border-inline-start', desc: 'CSS 简写属性，用于在样式表中的某处同时设置逻辑行首边框的各属性值' },
        { code: 'border-inline-start-color', desc: '定义了元素的逻辑行首的边框颜色，并根据元素的书写模式、行内方向和文本朝向对应至实体边框颜色' },
        { code: 'border-inline-start-style', desc: '定义了元素的逻辑行首的边框线型，并根据元素的书写模式、行内方向和文本朝向对应至实体边框线型' },
        { code: 'border-inline-start-width', desc: '定义了元素的逻辑行首的边框宽度，并根据元素的书写模式、行内方向和文本朝向对应至实体边框宽度' },
        { code: 'border-inline-style', desc: '定义了元素的逻辑行向的边框线型，并根据元素的书写模式、行内方向和文本朝向对应至实体边框线型' },
        { code: 'border-inline-width', desc: '定义了元素的逻辑行向的边框宽度，并根据元素的书写模式、行内方向和文本朝向对应至实体边框宽度' },
        { code: 'border-left', desc: 'CSS 简写属性，设置元素左边框样式' },
        { code: 'border-left-color', desc: '设置元素的左边框颜色' },
        { code: 'border-left-style', desc: '设置元素左边框的线条样式' },
        { code: 'border-left-width', desc: '设置元素左边框的宽度' },
        { code: 'border-radius', desc: '设置元素的外边框圆角' },
        { code: 'border-right', desc: 'CSS 简写属性，设置元素右边框样式' },
        { code: 'border-right-color', desc: '设置元素的右边框颜色' },
        { code: 'border-right-style', desc: '设置元素右边框的线条样式' },
        { code: 'border-right-width', desc: '设置元素右边框的宽度' },
        { code: 'border-spacing', desc: '指定相邻单元格边框之间的距离（只适用于 边框分离模式 `border-collapse` ）' },
        { code: 'border-start-end-radius', desc: '定义了元素的逻辑边框半径，并根据元素的书写模式、行内方向和文本朝向对应至实体边框半径' },
        { code: 'border-start-start-radius', desc: ' 定义了元素的逻辑边框半径，并根据元素的书写模式、行内方向和文本朝向对应至实体边框半径' },
        { code: 'border-style', desc: ' CSS 简写属性，用来设定元素所有边框的样式' },
        { code: 'border-top', desc: 'CSS 简写属性，设置元素上边框样式' },
        { code: 'border-top-color', desc: '设置元素的上边框颜色' },
        { code: 'border-top-style', desc: '设置元素右边框的线条样式' },
        { code: 'border-top-width', desc: '设置元素上边框的宽度' },
        { code: 'border-top-left-radius', desc: '设置元素左上角的圆角效果' },
        { code: 'border-top-right-radius', desc: '属性设置元素的右上角的圆角效果' },
        { code: 'border-width', desc: '设置盒子模型的边框宽度' },
        { code: 'bottom', desc: '定义了定位元素下外边距边界与其包含块下边界之间的偏移，非定位元素设置此属性无效（ `bottom` 的效果取决于元素的 `position` 属性）' },
        { code: 'box-decoration-break', desc: '定义当元素跨多行、多列或多页时，元素的片段应如何呈现' },
        { code: 'box-shadow', desc: '在元素的框架上添加阴影效果' },
        { code: 'box-sizing', desc: '定义了 user agent 应该如何计算一个元素的总宽度和总高度' },
        { code: 'break-after', desc: '设置在生成的盒子之后的页面，列或区域中断行为（换句话说，如何以及是否中断）。如果没有生成的盒子，则该属性将被忽略' },
        { code: 'break-before', desc: '定义页面，列或区域在生成的盒子之前应如何处理中断。如果没有生成的盒子，则忽略该属性' },
        { code: 'break-inside', desc: '设置在多列布局页面下的内容盒子如何中断，如果多列布局没有内容盒子，这个属性会被忽略' },
        { code: 'brightness()', desc: 'CSS 函数，将线性乘数应用于输入图像，使其看起来更亮或更暗', linkParam: 'filter-function/brightness' },
    ],
    C: [
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'caption-side', desc: '将表格的标题 `<caption>` 放到规定的位置。但是具体显示的位置与表格的 `writing-mode` 属性值有关' },
        { code: 'caret-color', desc: '定义插入光标 `caret` 的颜色' },
        { code: '@charset', desc: '指定样式表中使用的字符编码。它必须是样式表中的第一个元素，而前面不得有任何字符', linkParam: '@charset' },
        { code: ':checked', desc: 'CSS 伪类，表示任何处于选中状态的 `radio`, `checkbox` 或 `select` 元素中的 `option` 元素' },
        { code: 'circle()', desc: 'CSS 函数，表现基础图形的 CSS 数据类型，作用于clip-path 与 shape-outside 属性中', linkParam: 'basic-shape#circle()' },
        { code: 'clamp()', desc: 'CSS 函数，接收三个参数：最小值、首选值、最大值，把一个值限制在一个上限和下限之间，当这个值超过最小值和最大值的范围时，在最小值和最大值之间选择一个值使用' },
        { code: 'clear', desc: '指定一个元素是否必须移动 (清除浮动后) 到在它之前的浮动元素下面' },
        { code: 'clip-path', desc: '使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏' },
        { code: '<color>', desc: 'CSS 数据类型，`<color>` 表示一种标准 RGB 色彩空间（sRGB color space）的颜色', linkParam: 'color_value' },
        { code: 'color', desc: '设置颜色值的前景色以及文本装饰，并设置 `currentcolor` 值' },
        { code: 'color-scheme', desc: '设置元素展示的主题颜色方案' },
        { code: 'column-count', desc: '描述元素的列数' },
        { code: 'column-fill', desc: '控制内容如何划分为列' },
        { code: 'column-gap', desc: '设置元素列之间的间隔 `gutter` 大小' },
        { code: 'column-rule', desc: 'CSS 简写属性，可以在多列布局中设定分割线的宽度、样式和颜色' },
        { code: 'column-rule-color', desc: '设置在多列布局中被画在两列之间的规则（线条）的颜色' },
        { code: 'column-rule-style', desc: '设置在多列布局中被画在两列之间的规则（线条）的样式' },
        { code: 'column-rule-width', desc: '设置在多列布局中被画在两列之间的规则（线条）的宽度' },
        { code: 'column-span', desc: '设置元素跨越所有的列' },
        { code: 'column-width', desc: '在多列布局中设置理想的列宽', lang: 'en-US' },
        { code: 'columns', desc: 'CSS 简写属性，设置元素的列宽和列数' },
        { code: 'conic-gradient()', desc: 'CSS 函数，创建一个由渐变组成的图像，颜色过渡围绕中心点旋转', lang: 'en-US' },
        { code: 'contain', desc: '标示了元素及其内容尽可能独立于文档树的其余部分' },
        { code: 'contain-intrinsic-block-size', desc: '定义了元素受尺寸局限时浏览器用于布局的元素块向尺寸' },
        { code: 'contain-intrinsic-height', desc: '定义了元素受尺寸局限时浏览器用于布局的元素高度' },
        { code: 'contain-intrinsic-inline-size', desc: '定义了元素受尺寸局限时浏览器用于布局的元素行向尺寸' },
        { code: 'contain-intrinsic-size', desc: '定义了元素受尺寸局限时浏览器用于布局的元素尺寸' },
        { code: 'contain-intrinsic-width', desc: ' 定义了元素受尺寸局限时浏览器用于布局的元素宽度' },
        { code: 'content', desc: '用于在元素的 `::before` 和 `::after` 伪元素中插入内容' },
        { code: 'content-visibility', desc: '控制元素是否渲染其内容，以及施加一组强局限' },
        { code: 'contrast()', desc: 'CSS 函数，调整输入图像的对比度', linkParam: 'filter-function/contrast' },
        { code: 'cos()', desc: 'CSS 函数，返回某数的余弦值，此值介于 -1 和 1 之间。此函数含有单个计算式，此式须将参数结果按弧度数解析为 `<number>` 或 `<angle>`' },
        { code: 'counter()', desc: 'CSS 函数，返回一个代表计数器的当前值的字符串' },
        { code: 'counter-increment', desc: '用于将 CSS 计数器 的值增加给定值' },
        { code: 'counter-reset', desc: '用于将 CSS 计数器 重置为制定值' },
        { code: 'counter-set', desc: '将 CSS 计数器 设置为给定值', lang: 'en-US' },
        { code: '@counter-style', desc: 'CSS `@` 语法 ，它让开发者可以自定义 counter 的样式', linkParam: '@counter-style' },
        { code: 'counters()', desc: 'CSS 函数，嵌套计数器，返回表示指定计数器当前值的连接字符串' },
        { code: 'cross-fade()', desc: 'CSS 函数，可用于以定义的透明度混合两个或多个图像', lang: 'en-US' },
        { code: 'cubic-bezier()', desc: 'CSS 数据类型，表示描述数值变化速率的数学函数', linkParam: 'easing-function' },
        { code: '::cue (:cue)', desc: 'CSS 伪元素，匹配所选元素中的 `WebVTT` 提示，例如 `<video>`' },
        { code: '::cue-region', desc: 'CSS 伪元素，匹配所选元素中的 `WebVTT` 提示', lang: 'en-US' },
        { code: ':current', desc: 'CSS 伪类，表示一个时间维度的伪类，代表当前显示的元素或元素的祖先。例如，此伪类可用于表示 `WebVTT` 正在显示的带有字幕的视频', lang: 'en-US' },
        { code: 'cursor', desc: '设置光标的类型（如果有），在鼠标指针悬停在元素上时显示相应样式' },
        { code: '<custom-ident>', desc: 'CSS 数据类型，指用户自定义字符串标识符，要区分大小写，值不能有任何歧义' },
        { code: 'cap', desc: 'CSS 数据类型，表示元素字体 `font` 的 “上限高度”', linkParam: 'length#cap' },
        { code: 'ch', desc: 'CSS 数据类型，代表元素所用字体 font 中“0”这一字形的宽度', linkParam: 'length#ch' },
        { code: 'cm', desc: 'CSS 数据类型，厘米。 1cm = 96px / 2.54', linkParam: 'length#cm' },
    ],
    D: [
        { code: 'deg', desc: 'CSS 数据类型，表示角的大小', linkParam: 'angle#deg' },
        { code: ':default', desc: 'CSS 伪类，表示一组相关元素中的默认表单元素' },
        { code: ':defined', desc: ' CSS 伪类，表示任何已定义的元素，这包括任何浏览器内置的标准元素以及已成功定义的自定义元素' },
        { code: 'descent-override', desc: '定义字体的下降度量。 下降度量是 CSS 用来在内联格式化上下文中布置行框的基线以下的高度', lang: 'en-US', linkParam: '@font-face/descent-override' },
        { code: '<dimension>', desc: 'CSS 数据类型，是一个带有单位的 `<number>`，例如：10px ' },
        { code: ':dir()', desc: 'CSS 伪类，匹配特定文字书写方向的元素' },
        { code: 'direction', desc: '设置文本、表格列和水平溢出的方向' },
        { code: ':disabled', desc: 'CSS 伪类，表示任何被禁用的元素' },
        { code: 'display', desc: '设置元素是否被视为块或者内联元素以及用于子元素的布局' },
        { code: '<display-box>', desc: '定义一个元素到底是否产生显示盒' },
        { code: '<display-inside>', desc: '指定元素的内部显示类型，它定义了布局其内容的格式化上下文的类型', lang: 'en-US' },
        { code: '<display-internal>', desc: '在一些布局模型，例如 table 和 ruby具有复杂的内部结构中定义了其“内部”显示值，这些值仅在该特定布局模式中具有意义' },
        { code: '<display-legacy>', desc: 'CSS 2 为 `display` 属性使用单关键字的语法，对于相同布局模式的块级和行级变体要求使用各自的关键字' },
        { code: '<display-listitem>', desc: '使元素生成一个 `::marker` 伪元素，其内容由其列表样式属性（例如项目符号点）指定，并为其自身内容指定类型的主体框', lang: 'en-US' },
        { code: '<display-outside>', desc: '指定了元素的外侧显示 `display` 类型，即元素在流式布局中的角色' },
        { code: 'drop-shadow()', desc: 'CSS 函数，对输入图像应用投影效果', lang: 'en-US', linkParam: 'filter-function/drop-shadow' },
        { code: 'dpcm', desc: ' CSS 数据类型，用于描述媒体查询中的分辨率的 `<resolution>`，表示输出设备的像素密度', linkParam: 'resolution#dpcm' },
        { code: 'dpi', desc: 'CSS 数据类型，用于描述媒体查询中的分辨率的 `<resolution>`，表示输出设备的像素密度', linkParam: 'resolution#dpi' },
        { code: 'dppx', desc: 'CSS 数据类型，用于描述媒体查询中的分辨率的 `<resolution>`，表示输出设备的像素密度', linkParam: 'resolution#dppx' },
    ],
    E: [
        { code: 'element()', desc: 'CSS 函数，定义了一个从任意的 HTML 元素中生成的图像 `<image>` 值,该图像值是实时的' },
        { code: 'ellipse()', desc: 'CSS 数据类型，表现基础图形椭圆，作用于 `clip-path` 与 `shape-outside` 属性中', linkParam: 'basic-shape#ellipse()' },
        { code: ':empty', desc: 'CSS 伪类，用于选择不包含任何子元素的元素' },
        { code: 'empty-cells', desc: '定义了用户端 `user agent` 应该怎么来渲染表格 `<table>` 中没有可见内容的单元格的边框和背景' },
        { code: ':enabled', desc: 'CSS 伪类，表示任何已启用的元素。如果元素可以被激活（例如被选择、单击、输入文本等），或者能够获得焦点，那么它就是启用的' },
        { code: 'env()', desc: 'CSS 函数，类似于 `var()` 函数和 `custom properties` 的方式将用户定义的环境变量值插入 CSS 中' },
        { code: 'exp()', desc: 'CSS 函数，指数型函数，以数值为参数，返回数学常数 e 的指定次方' },
        { code: 'em', desc: ' CSS 数据类型，用于表示距离尺寸', linkParam: 'length#em' },
        { code: 'ex', desc: 'CSS 数据类型，用于表示距离尺寸', linkParam: 'length#ex' },
    ],
    F: [
        { code: 'fallback', desc: '如果当前计数器样式（`@counter-style`）无法为特定计数器值创建标记表示，回退描述符可用于指定回退到的计数器样式', lang: 'en-US', linkParam: '@counter-style/fallback' },
        { code: 'filter', desc: '将模糊或颜色偏移等图形效果应用于元素。通常用于调整图像、背景和边框的渲染' },
        { code: '<filter-function>', desc: 'CSS 数据类型，代表可以改变输入图像外观的图形效果，它可以用于 `filter` 和 `backdrop-filter` 属性' },
        { code: ':first', desc: 'CSS 伪类，与 `@page` at 规则一起使用。表示打印文档的第一页' },
        { code: ':first-child', desc: 'CSS 伪类，表示在一组兄弟元素中的第一个元素' },
        { code: '::first-letter(:first-letter)', desc: 'CSS 伪元素，选中块级元素第一行的第一个字母，并且文字所处的行之前没有其他内容（如图片和内联的表格）' },
        { code: '::first-line(:first-line)', desc: 'CSS 伪元素，设置块级元素的第一行应用的样式' },
        { code: ':first-of-type', desc: 'CSS 伪类，表示一组兄弟元素中其类型的第一个元素' },
        { code: 'fit-content', desc: '设置元素的 `width`、`height`、`min-width`、`min-height`、`max-width` 和 `max-height`，此时最大和最小尺寸将基于元素的内容尺寸计算' },
        { code: '<flex>', desc: 'CSS 数据类型，表示了网格（grid）容器中的一段可变长度。于 `grid-template-columns`、`grid-template-rows` 及相关属性中使用' },
        { code: 'flex', desc: 'CSS 简写属性，是 `flex-grow`，`flex-shrink`，`flex-basis` 的简写，设置了弹性项目如何增大或缩小以适应其弹性容器中可用的空间' },
        { code: 'flex-basis', desc: '指定了 flex 元素在主轴方向上的初始大小。如果不使用 `box-sizing` 改变盒模型的话，那么这个属性就决定了 flex 元素的内容盒 `content-box` 的尺寸' },
        { code: 'flex-direction', desc: '指定了内部元素是如何在 flex 容器中布局的，定义了主轴的方向' },
        { code: 'flex-flow', desc: 'CSS 简写属性，是 `flex-direction` 和 `flex-wrap` 的简写' },
        { code: 'flex-grow', desc: '设置 flex 项 主尺寸 的 flex 增长系数' },
        { code: 'flex-shrink', desc: '指定了 flex 元素的收缩规则。flex 元素仅在默认宽度之和大于容器的时候才会发生收缩，其收缩的大小是依据 `flex-shrink` 的值' },
        { code: 'flex-wrap', desc: '指定 flex 元素单行显示还是多行显示。如果允许换行，这个属性允许你控制行的堆叠方向' },
        { code: 'fr', desc: '<flex> 数据类型的单位，<number> 后加单位 `fr`', linkParam: 'flex_value#fr' },
        { code: 'float', desc: '指定一个元素应沿其容器的左侧或右侧放置，允许文本和内联元素环绕它。该元素从网页的正常流动（文档流）中移除，但是仍然保持部分的流动性（与绝对定位相反）' },
        { code: ':focus', desc: 'CSS 伪类，表示获得焦点的元素' },
        { code: ':focus-visible', desc: 'CSS 伪类，当元素匹配 `:focus` 伪类并且客户端 (UA) 的启发式引擎决定焦点应当可见时，`:focus-visible` 伪类将生效' },
        { code: ':focus-within', desc: 'CSS 伪类，表示当元素或其任意后代元素被聚焦时，将匹配该元素' },
        { code: 'font', desc: 'CSS 简写属性，是 `font-style`, `font-variant`, `font-weight`, `font-size`, `line-height` 和 `font-family` 属性的简写，可以将元素的字体设置为系统字体' },
        { code: 'font-display', desc: '决定了一个 @font-face 在不同的下载时间和可用时间下是如何展示的', linkParam: '@font-face/font-display' },
        { code: '@font-face', desc: 'CSS at-rule，指定一个用于显示文本的自定义字体；字体能从远程服务器或者用户本地安装的字体加载' },
        { code: 'font-family', desc: '通过给定一个有先后顺序的，由字体名或者字体族名组成的列表来为选定的元素设置字体' },
        { code: 'font-family(@font-face)', desc: '为页面上的字体指定一个由 `@font-face` 规则定义的字体族', linkParam: '@font-face/font-family' },
        { code: 'font-feature-settings', desc: '用于控制 OpenType 字体中的高级印刷功能' },
        { code: '@font-feature-values', desc: 'CSS at-rule，允许作者在 `font-variant-alternates` 中使用通用名称，用于在 OpenType 中以不同方式激活功能。它允许在使用几种字体时简化 CSS',linkParam:'@font-feature-values' },
        { code: 'font-kerning', desc: '设置是否使用字体中储存的字距信息' },
        { code: 'font-language-override', desc: '控制在指定的语言中使用特定的字形' },
        { code: 'font-optical-sizing', desc: '设置文本渲染是否针对不同尺寸的视图进行优化调整', lang: 'en-US' },
        { code: 'font-size', desc: '设置字体大小。更改字体大小还会更新字体大小相关的 <length> 单位，例如 `em`、`ex` 等' },
        { code: 'font-size-adjust', desc: '定义字体大小应取决于小写字母，而不是大写字母。在字体较小时，字体的可读性主要由小写字母的大小决定，通过此选项即可进行调整' },
        { code: 'font-stretch', desc: '为字体定义一个正常或经过伸缩变形的字体外观，这个属性并不会通过伸展/缩小而改变字体的几何外形' },
        { code: 'font-style', desc: '设置 `font-family` 字体下的 `italic` 或 `oblique` 样式' },
        { code: 'font-synthesis', desc: '控制浏览器可以合成（synthesize）哪些缺失的字体，粗体或斜体' },
        { code: 'font-variant', desc: 'CSS 简写属性，是 `font-variant-caps`, `font-variant-numeric`, `font-variant-alternates`, `font-variant-ligatures`, `font-variant-east-asian` 等属性的简写' },
        { code: 'font-variant-alternates', desc: '控制备用字体的使用，这些替代字体可以通过 `@font-feature-values` 中定义的替代名称来引用' },
        { code: 'font-variant-caps', desc: '控制大写字母特殊字符的使用' },
        { code: 'font-variant-east-asian', desc: '控制东亚文字（如日语和中文）的替代字形的使用', lang: 'en-US' },
        { code: 'font-variant-ligatures', desc: '控制其所应用元素文本的 `ligatures` 与 `contextual forms` 。会使文字最终的表现形式更加统一' },
        { code: 'font-variant-numeric', desc: '控制数字、分数和序号标记的替代字形的使用' },
        { code: 'font-variant-position', desc: '控制替代的、较小的字形的使用，这些字形定位为上标或下标' },
        { code: 'font-variation-settings', desc: '提供了对 可变字体(variable font) 特征的低级控制，通过指定要更改的特征的四个字母轴名称及其值' },
        { code: 'font-weight', desc: '指定字体的粗细程度' },
        { code: 'forced-color-adjust', desc: '选择某些元素退出强制颜色模式。然后将这些值的控制权恢复到 CSS',lang:'en-US' },
        { code: 'format()', desc: '`@font-face` 中的 src 描述符指定了包含字体数据的资源。`@font-face` 规则中需要指定这个属性', linkParam: '@font-face/src#format()' },
        { code: '<frequency>', desc: ' CSS数据类型，表示频率维度，例如语音的音高。目前它未在任何 CSS 属性中被使用' },
        { code: ':fullscreen', desc: 'CSS 伪类，匹配当前处于全屏模式的所有元素' },
        { code: ':future', desc: 'CSS 伪类，匹配任何完全出现在与 `:current` 匹配的元素之后的元素。例如，在带有由 WebVTT 显示的字幕的视频中',lang:'en-US' },
    ],
    G: [
        { code: 'grad', desc: 'CSS 数据类型，用于表示角的大小，百分度（grad）',linkParam:'angle#grad' },
        { code: 'gap', desc: 'CSS 简写属性，是 `row-gap` 和 `column-gap`的简写，用来设置网格行与列之间的间隙' },
        { code: '<gradient>', desc: 'CSS 数据类型，是一种 `<image>` CSS 数据类型的子类型，用于表现两种或多种颜色的过渡转变' },
        { code: '::grammar-error', desc: 'CSS 伪元素，用于浏览器标识为语法错误的文本段' },
        { code: 'grayscale()', desc: 'CSS 函数，对图片进行灰度转换，它是 `<filter-function>` 的子属性',linkParam:'filter-function/grayscale' },
        { code: 'grid', desc: 'CSS 简写属性，可以用来设置以下属性： 显式网格属性 `grid-template-rows`、`grid-template-columns` 和 `grid-template-areas`， 隐式网格属性 `grid-auto-rows`、`grid-auto-columns` 和 `grid-auto-flow`， 间距属性 `grid-column-gap` 和 `grid-row-gap`' },
        { code: 'grid-area', desc: 'CSS 简写属性， 是 `grid-row-start` 、`grid-column-start`、`grid-row-end` 和 `grid-column-end` 的简写，通过基线（line），跨度（span）或没有（自动）的网格放置在 grid row 中指定一个网格项的大小和位置，继而确定 grid area 的边界' },
        { code: 'grid-auto-columns', desc: '指定了隐式创建的网格纵向轨道（track）的宽度' },
        { code: 'grid-auto-flow', desc: '控制自动布局算法怎样运作，精确指定在网格中被自动布局的元素怎样排列' },
        { code: 'grid-column', desc: 'CSS 简写属性，是 `grid-column-start` 和 `grid-column-end` 的简写，用于指定网格项目的大小和位置{ 通过为它的网格位置贡献线条，跨度或不添加任何内容（自动）' },
        { code: 'grid-column-end', desc: '指定网格项在网格列中的结束位置，方法是为其网格放置提供一条线、一个跨度或什么都不做（自动），从而指定其网格区域的块结束边缘',lang:'en-US' },
        { code: 'grid-column-start', desc: '指定网格项在网格列中的起始位置，方法是为其网格放置提供一条线、一个跨度或什么都不做（自动）。 这个开始位置定义了网格区域的块开始边缘',lang:'en-US' },
        { code: 'grid-row', desc: 'CSS 简写属性，是 `grid-row-start` 和 `grid-row-end` 的缩写，它定义了网格单元与网格行（row）相关的尺寸和位置，可以通过在网格布局中的基线（line），跨度（span），或者什么也不做（自动），从而指定 grid area 的行起始与行结束' },
        { code: 'grid-row-end', desc: '指定网格项在网格行中的结束位置，方法是为其网格放置提供一条线、一个跨度或什么都不做（自动），从而指定其网格区域的行内结束边缘',lang:'en-US' },
        { code: 'grid-row-start', desc: '指定网格项在网格行中的起始位置，方法是为其网格放置提供一条线、一个跨度或什么都不做（自动），从而指定其网格区域的内联开始边缘',lang:'en-US' },
        { code: 'grid-template', desc: 'CSS 简写属性，是 `grid-template-rows`、`grid-template-columns` 与 `grid-template-areas`的简写，定义网格中行、列与分区' },
        { code: 'grid-template-areas', desc: '网格区域 grid areas 在 CSS 中的特定命名' },
        { code: 'grid-template-columns', desc: '基于网格列的维度，去定义网格线的名称和网格轨道的尺寸大小' },
        { code: 'grid-template-rows', desc: '基于 网格行 的维度，去定义网格线的名称和网格轨道的尺寸大小' }, 
    ],
    H:[
        { code: 'hz', desc: 'CSS 数据类型，表示频率维度，例如语音的音高。目前它未在任何 CSS 属性中被使用',linkParam:'frequency#hz' },
        { code: 'hanging-punctuation', desc: '指定了标点符号应该放在文本句子的开头还是结尾。悬挂标点符号可能被放在线框外' },
        { code: ':has()', desc: 'CSS 伪类，表示一个元素，如果作为参数传递的任何相对选择器在锚定到该元素时，至少匹配一个元素' },
        { code: 'height', desc: '指定了一个元素的高度' },
        { code: ':host()', desc: 'CSS 伪类，选择包含使用这段 CSS 的 Shadow DOM 的影子宿主（这样就可以从 Shadow DOM 中选择包括它的自定义元素）——但前提是该函数的参数与选择的阴影宿主相匹配',linkParam:':host_function' },
        { code: ':hover', desc: 'CSS 伪类，用户使用指针设备与元素进行交互时匹配，但不一定激活它。通常情况下，用户将光标（鼠标指针）悬停在元素上时触发' },
        { code: 'hsl()', desc: 'CSS 数据类型，表示一种标准 RGB 色彩空间（sRGB color space）的颜色',linkParam:'color_value#hsl()' },
        { code: 'hsla()', desc: 'CSS 数据类型，允许在声明 CSS 属性值时执行一些计算',linkParam:'color_value#hsla()' },
        { code: 'hue-rotate()', desc: 'CSS 函数，旋转元素及其内容的色调',lang:'en-US',linkParam:'filter-function/hue-rotate' },
        { code: 'hyphenate-character', desc: '设置在断字之前在行尾使用的字符（或字符串）',lang:'en-US' },
        { code: 'hyphenate-limit-chars', desc: '指定允许单词连字符的最小单词长度以及连字符前后的最小字符数',lang:'en-US' },
        { code: 'hyphens', desc: '告知浏览器在换行时如何使用连字符连接单词。可以完全阻止使用连字符，也可以控制浏览器什么时候使用，或者让浏览器决定什么时候使用' },
        { code: 'hypot()', desc: 'CSS 函数，指数函数，返回其参数平方和的平方根',lang:'en-US' },
    ],
    I:[
        { code: '<ident>', desc: 'CSS 数据类型，表示用作标识符的任意字符串',lang:'en-US',linkParam:'ident' },
        { code: '<image>', desc: 'CSS 数据类型，描述 2D 图形',linkParam:'image' },
        { code: 'image()', desc: 'CSS 函数，描述 2D 图形',linkParam:'image#the_image()_functional_notation' },
        { code: 'image-orientation', desc: '用来修正某些图片的预设方向' },
        { code: 'image-rendering', desc: '用于设置图像缩放算法。它适用于元素本身，适用于元素其他属性中的图像，也应用于子元素' },
        { code: 'image-resolution', desc: '指定元素中或元素上使用的所有光栅图像的固有分辨率。 它影响内容图像，如替换元素和生成的内容，以及装饰图像，如背景图像图像',lang:'en-US' },
        { code: 'image-set()', desc: 'CSS 函数，让浏览器从给定集合中选择最合适的 CSS 图像的方法，主要用于高像素密度屏幕',lang:'en-US',linkParam:'image/image-set' },
        { code: '@import', desc: 'CSS at-rule，用于从其他样式表导入样式规则。这些规则必须先于所有其他类型的规则，@charset 规则除外' },
        { code: ':in-range', desc: 'CSS 伪类，代表一个 `<input>` 元素，其当前值处于属性 min 和 max 限定的范围之内' },
        { code: ':indeterminate', desc: 'CSS 伪类，表示状态不确定的表单元素' },
        { code: 'inherit', desc: 'CSS 关键字，使得元素获取其父元素的计算值。它可以应用于任何 CSS 属性，包括 CSS 简写 all' },
        { code: 'initial', desc: 'CSS 关键字，将属性的初始（或默认）值应用于元素，它可以应用于任何 CSS 属性。这包括 CSS 简写 all，initial 可用于将所有 CSS 属性恢复到其初始状态'},
        { code: 'initial-letter', desc: '为下降、凸起和凹陷的首字母设置样式',lang:'en-US' },
        { code: 'initial-letter-align', desc: '指定段落中首字母的对齐方式',lang:'en-US' },
        { code: 'inline-size', desc: '根据元素的书写模式定义了元素区块的横向或纵向尺寸。根据 `writing-mode` 的值，此属性对应于 `width` 或 `height` 属性' },
        { code: 'inset', desc: 'CSS 简写属性，是 `top`、`right`、`bottom` 和 ``left` 的简写。其与 margin 简写属性具有相同的多值语法' },
        { code: 'inset()', desc: 'CSS 数据类型，作用于 `clip-path` 与 `shape-outside` 属性中',linkParam:'basic-shape#inset()' },
        { code: 'inset-block', desc: '定义了元素的逻辑块首和块末偏移，并根据元素的书写模式、行内方向和文本朝向对应至实体偏移' },
        { code: 'inset-block-end', desc: '定义了元素的逻辑块末偏移，并根据元素的书写模式、行内方向和文本朝向对应至实体偏移' },
        { code: 'inset-block-start', desc: '定义了元素的块首偏移，并根据元素的书写模式、行内方向和文本朝向对应至实体偏移' },
        { code: 'inset-inline', desc: '定义了元素的逻辑行首和行末偏移，并根据元素的书写模式、行内方向和文本朝向对应至实体偏移' },
        { code: 'inset-inline-end', desc: '定义了元素的逻辑行末偏移，并根据元素的书写模式、行内方向和文本朝向对应至实体偏移' },
        { code: 'inset-inline-start', desc: '定义了元素的逻辑行首偏移，并根据元素的书写模式、行内方向和文本朝向对应至实体偏移' },
        { code: '<integer>', desc: 'CSS 数据类型，一种特殊的 `<number>` 类型，它表示一个整数，无论是正数还是负数' },
        { code: ':invalid', desc: 'CSS 伪类，用来选择任何未通过验证的 `<form>`、`<fieldset>`、`<input>` 或其他表单元素' },
        { code: 'invert()', desc: 'CSS 函数，反转图像的颜色',lang:'en-US',linkParam:'filter-function/invert' },
        { code: ':is()', desc: 'CSS 伪类，以选择器列表作为参数，并选择该列表中任意一个选择器可以选择的元素' },
        { code: 'isolation', desc: '定义该元素是否必须创建一个新的层叠上下文' },
        { code: 'ic', desc: 'CSS 数据类型，表示距离尺寸',linkParamL:'length#ic' },
        { code: 'in', desc: 'CSS 数据类型，表示距离尺寸',linkParam:'length#in' },
    ],
    J:[
        { code: 'justify-content', desc: '定义了浏览器之间，如何分配顺着弹性容器主轴 (或者网格行轴) 的元素之间及其周围的空间' },
        { code: 'justify-items', desc: '为所有盒中的项目定义了默认的 `justify-self`，可以使这些项目以默认方式沿适当轴线对齐到每个盒子' },
        { code: 'justify-self', desc: '设置单个盒子在其布局容器中的对其方式' },
        { code: 'justify-tracks', desc: '在其内联轴上具有砌体的网格容器设置砌体轴的对齐方式',lang:'en-US' },
    ],
    K:[
        { code: 'khz', desc: 'CSS 数据类型，表示频率维度，例如语音的音高。目前它未在任何 CSS 属性中被使用',linkParam:'frequency#khz' },
        { code: '@keyframes', desc: 'CSS at-rule，通过在动画序列中定义关键帧（或 waypoints）的样式来控制 CSS 动画序列中的中间步骤',linkParam:'@keyframes' },
    ],
    L:[
        { code: ':lang()', desc: 'CSS 伪类，基于元素语言来匹配页面元素' },
        { code: ':last-child', desc: 'CSS 伪类，代表一组兄弟元素中的最后元素' },
        { code: ':last-of-type', desc: 'CSS 伪类，表示了在（它父元素的）子元素列表中，最后一个给定类型的元素' },
        { code: '@layer', desc: 'CSS at-rule，声明了一个 级联层，同一层内的规则将级联在一起，这给予了开发者对层叠机制的更多控制',linkParam:'@layer' },
        { code: ':left', desc: 'CSS 伪类，需要和@规则 @page 配套使用，对打印文档的左侧页设置 CSS 样式' },
        { code: 'left', desc: '定义了定位元素的左外边距边界与其包含块左边界之间的偏移，非定位元素设置此属性无效' },
        { code: '<length>', desc: 'CSS 数据类型，表示距离尺寸' },
        { code: '<length-percentage>', desc: 'CSS 数据类型，表示一个值，该值可以是 `<length>` 或 `<percentage>`' },
        { code: 'letter-spacing', desc: '设置文本字符的间距表现。在渲染文本时添加到字符之间的自然间距中。letter-spacing 的正值会导致字符分布得更远，而 letter-spacing 的负值会使字符更接近' },
        { code: 'line-break', desc: '用来处理如何断开（break lines）带有标点符号的中文、日文或韩文（CJK）文本的行' },
        { code: 'line-height', desc: '用于设置多行元素的空间量，如多行文本的间距。对于块级元素，它指定元素行盒（line boxes）的最小高度。对于非替代的 inline 元素，它用于计算行盒（line box）的高度' },
        { code: 'line-height-step', desc: '设置行高的步长单位。 设置该属性后，线框高度会向上舍入到最接近的单位倍数',lang:'en-US' },
        { code: 'linear-gradient()', desc: 'CSS 函数，线性渐变，创建一个图像，该图像由沿直线的两种或多种颜色之间的渐进过渡组成',lang:'en-US' },
        { code: ':link', desc: 'CSS 伪类，表示尚未被访问的元素，匹配每个具有 href 属性的未访问的 `<a>` 或 `<area>` 元素' },
        { code: 'list-style', desc: 'CSS 简写属性，是 `list-style-type`, `list-style-image`, 和 `list-style-position` 的简写' },
        { code: 'list-style-image', desc: '指定一个能用来作为列表元素标记的图片' },
        { code: 'list-style-position', desc: '指定标记框在主体块框中的位置' },
        { code: 'list-style-type', desc: '设置列表元素的 marker（比如圆点、符号、或者自定义计数器样式）' },
        { code: ':local-link', desc: 'CSS 伪类，表示指向同一文档的链接' },
        { code: 'log()', desc: 'CSS 函数，指数型函数，返回某数的对数' },
    ],
    M:[
        { code: 'mm', desc: 'CSS 数据类型，表示距离尺寸',linkParam:'length#mm' },
        { code: 'margin', desc: 'CSS 简写属性，是 `margin-top`，`margin-right`，`margin-bottom`，和 `margin-left` 的简写，为给定元素设置所有四个（上下左右）方向的外边距属性' },
        { code: 'margin-block', desc: '定义了元素的逻辑块首和块末外边距，并根据元素的书写模式、行内方向和文本朝向对应至实体外边距' },
        { code: 'margin-block-end', desc: '定义了元素的逻辑块末外边距，并根据元素的书写模式、行内方向和文本朝向对应至实体外边距' },
        { code: 'margin-block-start', desc: '定义了元素的逻辑块首外边距，并根据元素的书写模式、行内方向和文本朝向对应至实体外边距' },
        { code: 'margin-bottom', desc: '设置元素的底部外边距' },
        { code: 'margin-inline', desc: 'CSS 简写属性，定义了元素的逻辑行首和行末外边距，并根据元素的书写模式、行内方向和文本朝向对应至实体外边距' },
        { code: 'margin-inline-end', desc: '定义元素的逻辑行末外边距，根据元素的书写模式、行内方向和文本朝向映射为实体外边距' },
        { code: 'margin-inline-start', desc: '定义元素的逻辑行首外边距，根据元素的书写模式、行内方向和文本朝向映射为实体的外边距' },
        { code: 'margin-left', desc: '设置与元素相关联的盒子模型的左外边距。这个值可以为负值' },
        { code: 'margin-right', desc: '设置与元素相关联的盒子模型的右外边距。这个值可以为负值' },
        { code: 'margin-top', desc: '设置元素的顶部外边距外边距区域。正值使它离相邻元素更远，而负值使它更靠近相邻元素' },
        { code: 'margin-trim', desc: '允许容器修剪其子项与容器边缘相邻的边距',lang:'en-US' },
        { code: '::marker', desc: 'CSS 伪元素，匹配列表的标记框（通常为一个符号或数字）' },
        { code: 'mask', desc: '允许使用者通过遮罩或者裁切特定区域的图片的方式来隐藏一个元素的部分或者全部可见区域' },
        { code: 'mask-border', desc: '创建一个紧贴元素边框边缘的 `mask`' },
        { code: 'mask-border-mode', desc: '指定使用的混合模式遮罩边界' },
        { code: 'mask-border-outset', desc: '指定元素的遮罩边框距其边框的距离',lang:'en-US' },
        { code: 'mask-border-repeat', desc: '置如何调整源图像的边缘区域以适应元素遮罩边框的尺寸' },
        { code: 'mask-border-slice', desc: '将 `mask-border-source` 设置的图像划分为区域。 这些区域用于形成元素遮罩边框的组件',lang:'en-US' },
        { code: 'mask-border-source', desc: '设置用于创建元素遮罩边框的源图像',lang:'en-US' },
        { code: 'mask-border-width', desc: '设置元素的遮罩边框的宽度' },
        { code: 'mask-clip', desc: '设置受遮罩影响的区域，元素的绘制内容必须限制在这个区域',lang:'en-US' },
        { code: 'mask-composite', desc: '表示在当前遮罩层及其下方的遮罩层上使用合成操作',lang:'en-US' },
        { code: 'mask-image', desc: '设置了用作元素蒙版层的图像' },
        { code: 'mask-mode', desc: '设置由 `mask-image` 指向的遮罩被视为亮度或阿尔法遮罩' },
        { code: 'mask-origin', desc: '设置遮罩层的原点',lang:'en-US' },
        { code: 'mask-position', desc: '为每个定义的遮罩层图像设置初始位置，相对于由 `mask-origin` 设置的遮罩层图像位置',lang:'en-US' },
        { code: 'mask-repeat', desc: '设置遮罩层图像的重复方式。 遮罩层图像可以沿水平轴、垂直轴、两个轴重复，或者根本不重复',lang:'en-US' },
        { code: 'mask-size', desc: '指定遮罩层图像的大小。 可以完全或部分限制图像的大小，以保持其固有比例',lang:'en-US' },
        { code: 'mask-type', desc: '设置 SVG`<mask>` 元素是用作亮度还是 alpha 遮罩层。 它适用于 `<mask>` 元素本身',lang:'en-US' },
        { code: 'masonry-auto-flow', desc: '设置了在 CSS 网格布局中使用砌体时项目的放置方式',lang:'en-US' },
        { code: 'math-depth', desc: '描述了数学公式的每个元素的深度概念，相对于该公式的顶级容器。 具体来说，这用于确定 `font-size` 属性的计算值，当其指定值为 math 时',lang:'en-US' },
        { code: 'math-shift', desc: '设置 `MathML` 公式中的上标是否应该通过普通或紧凑的移位来提升',lang:'en-US' },
        { code: 'math-style', desc: '设置 MathML 方程应该以正常高度还是紧凑高度呈现',lang:'en-US' },
        { code: 'matrix()', desc: 'CSS 函数，指定了一个由指定的 6 个值组成的 2D 变换矩阵',linkParam:'transform-function/matrix' },
        { code: 'matrix3d()', desc: 'CSS 函数，以 4x4 齐次矩阵的形式定义一个 3D 转换。其结果是一个 `<transform-function>` 数据类型',linkParam:'transform-function/matrix3d' },
        { code: 'max()', desc: 'CSS 函数，从一个逗号分隔的表达式列表中选择最大（正方向）的值作为属性的值'},
        { code: 'max-block-size', desc: '指定元素在与 `writing-mode` 指定的书写方向相反的方向上的最大尺寸',lang:'en-US' },
        { code: 'max-height', desc: '设置元素的最大高度' },
        { code: 'max-inline-size', desc: '根据元素的书写模式定义了元素区块的横向或纵向最大尺寸' },
        { code: 'max-width', desc: '设置元素的最大宽度值' },
        { code: '@media', desc: 'CSS at-rule，可用于基于一个或多个媒体查询的结果来应用样式表的一部分',linkParam:'@media' },
        { code: 'min()', desc: '从逗号分隔符表达式中选择一个最小值作为 CSS 的属性值' },
        { code: 'min-block-size', desc: '根据元素的书写模式定义了元素区块的横向或纵向最小尺寸' },
        { code: 'min-height', desc: '设置元素的最小高度' },
        { code: 'min-inline-size', desc: '根据元素的书写模式定义了元素区块的横向或纵向最小尺寸' },
        { code: 'min-width', desc: '设置元素的最小宽度' },
        { code: 'minmax()', desc: '定义了一个长宽范围的闭区间，它与CSS 网格布局一起使用' },
        { code: 'mix-blend-mode', desc: '设置元素的内容应该与元素的直系父元素的内容和元素的背景如何混合' },
        { code: 'mod()', desc: 'CSS 函数，返回第一个参数除以第二个参数时剩余的模数，类似于 JavaScript 余数运算符 `%`',lang:'en-US' },
        { code: 'ms', desc: 'CSS 数据类型 ，表示以秒（s）或毫秒（ms）为单位的时间的值',linkParam:'time#ms' },
    ],
    N:[
        { code: '@namespace', desc: '用来定义使用在 CSS 样式表中的 XML 命名空间的 @规则',linkParam:'@namespace' },
        { code: 'negative', desc: '定义自定义计数器样式时，更改计数器值的表示，方法是提供一种方法来指定当值为负时要附加或前置到计数器表示的符号',lang:'en-US',linkParam:'@counter-style/negative' },
        { code: ':not()', desc: 'CSS 伪类，用来匹配不符合一组选择器的元素。由于它的作用是防止特定的元素被选中，它也被称为反选伪类' },
        { code: ':nth-child', desc: 'CSS 伪类，首先找到所有当前元素的兄弟元素，然后按照位置先后顺序从 1 开始排序，选择的结果为 CSS 伪类:nth-child 括号中表达式（an+b）匹配到的元素集合（n=0，1，2，3...）' },
        { code: ':nth-col()', desc: 'CSS 伪类，为表格和网格设计的。 它接受 An+B 符号，例如与 `:nth-child` 选择器一起使用，使用它来定位每个第 n 列。 值 odd 和 even 也有效',lang:'en-US' },
        { code: ':nth-last-child', desc: 'CSS 伪类，从兄弟节点中从后往前匹配处于某些位置的元素' },
        { code: ':nth-last-col()', desc: 'CSS 伪类，为表格和网格设计的。 它接受 An+B 符号，例如与 `:nth-child` 选择器一起使用，使用它来定位它之前的每个第 n 列，因此从列集的末尾开始倒数。 值 odd 和 even 也是有效的',lang:'en-US' },
        { code: ':nth-last-of-type', desc: 'CSS 伪类，基于元素在相同类型（标签名）的兄弟元素中相对最后一个元素的位置来匹配元素' },
        { code: ':nth-of-type', desc: 'CSS 伪类，基于相同类型（标签名称）的兄弟元素中的位置来匹配元素' },
        { code: '<number>', desc: 'CSS 数据类型，代表一个数字，可为整数或小数',linkParam:'number' },
    ],
    O:[
        { code: 'object-fit', desc: '指定可替换元素（例如：`<img>` 或 `<video>`）的内容应该如何适应到其使用高度和宽度确定的框' },
        { code: 'object-position', desc: '规定了可替换元素的内容在其内容框中的位置。可替换元素的内容框中未被对象所覆盖的部分，则会显示该元素的背景' },
        { code: 'offset', desc: '设置沿定义路径动画元素所需的所有属性',lang:'en-US' },
        { code: 'offset-anchor', desc: '指定元素框内的点沿着偏移路径行进，实际上是沿着路径移动',lang:'en-US' },
        { code: 'offset-distance', desc: '指定要放置的元素沿偏移路径的位置',lang:'en-US' },
        { code: 'offset-path', desc: '指定元素要遵循的运动路径，并定义元素在父容器或 SVG 坐标系中的定位',lang:'en-US' },
        { code: 'offset-position', desc: '定义偏移路径的初始位置',lang:'en-US' },
        { code: 'offset-rotate', desc: '定义元素沿偏移路径定位时的方向',lang:'en-US' },
        { code: ':only-child', desc: 'CSS 伪类，表示没有任何兄弟元素的元素' },
        { code: ':only-of-type', desc: 'CSS 伪类，代表了任意一个元素，这个元素没有其他相同类型的兄弟元素' },
        { code: 'opacity', desc: '指定了一个元素的不透明度。换言之，opacity 属性指定了一个元素后面的背景的被覆盖程度' },
        { code: 'opacity()', desc: 'CSS 函数，在输入的图片实例上应用透明度属性' },
        { code: ':optional', desc: 'CSS 伪类，表示任何未设置 required 属性的 `<input>`、`<select>` 或 `<textarea>` 元素' },
        { code: 'order', desc: '规定了弹性容器中的可伸缩项目在布局时的顺序。元素按照 order 属性的值的增序进行布局。拥有相同 order 属性值的元素按照它们在源代码中出现的顺序进行布局' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },

    ],
    P:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    Q:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    R:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    S:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    T:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    U:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    V:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    W:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    X:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    Y:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ],
    Z:[
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
        { code: 'calc()', desc: 'CSS 函数，允许在声明 CSS 属性值时执行一些计算' },
    ]
}

import{_ as n,o as a,c as s,d as e}from"./app-3272fd37.js";const t={},p=e(`<h1 id="打包优化" tabindex="-1"><a class="header-anchor" href="#打包优化" aria-hidden="true">#</a> 打包优化</h1><p>webpack 为我们构建现代化的前端页面提供了十分巨大的帮助。然而随着页面功能越来越复杂，项目体积越来越庞大时，webpack 替我们打包构建出的文件体积也会越来越大，这些大体积的文件会使得浏览器加载的速度变得缓慢从而造成性能问题。所以我们有必要了解一些 webpack 打包优化的技巧。</p><h2 id="优化技巧" tabindex="-1"><a class="header-anchor" href="#优化技巧" aria-hidden="true">#</a> 优化技巧</h2><p>可以结合 webpack 配置文件的打包配置及项目的实际情况来做针对性的优化，下面将列举出一些常用的 webpack 优化技巧。</p><h3 id="缩小搜寻范围" tabindex="-1"><a class="header-anchor" href="#缩小搜寻范围" aria-hidden="true">#</a> 缩小搜寻范围</h3><ul><li>优化 loader 配置：在 loader 配置中使用 <code>include</code> 或者 <code>exclude</code> 属性来包括/排除需要解析的文件。<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
          <span class="token punctuation">{</span>
             <span class="token comment">// 如果项目源码中只有 js 文件就不要写成 /\\.jsx?$/，缩小匹配范围</span>
             <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
             <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;babel-loader&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
             <span class="token comment">// __dirname 表示当前工作目录，也就是项目根目录</span>
             <span class="token comment">// 只对项目根目录下的 src 目录中的文件采用 babel-loader 解析</span>
             <span class="token literal-property property">include</span><span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
             <span class="token comment">// 也可以使用 exclude 属性来排除不需要解析的目录</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
       <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>优化 resolve.module 配置：确定模块的查找目录，避免多层查找（webpack 的模块查找机制是从 <code>./node_modules</code> 目录下开始查找，如果没找到再去上一层的 <code>../node_modules</code> 查找，还是没有找到的情况下再去 <code>../../node_modules</code> 查找）。<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token comment">// 使用绝对路径指明第三方模块存放的位置，以减少搜索步骤</span>
       <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;node_modules&#39;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
 <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>优化 resolve.mainFields 配置：确定第三方模块的入口文件字段，避免多次搜索，resolve.mainFields 的默认值与 target 的配置有关： <ul><li>当 target 为 web 或者 webworker 时，值是 <code>[&quot;browser&quot;, &quot;module&quot;, &quot;main&quot;]</code></li><li>当 target 为其它情况时，值是 <code>[&quot;module&quot;, &quot;main&quot;]</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token comment">// 只采用 main 字段作为入口文件描述字段，以减少搜索步骤</span>
       <span class="token literal-property property">mainFields</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>优化 resolve.alias 配置：设置路径别名，减少解析时间。<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token comment">// 使用 alias 把设置路径别名，减少耗时的递归解析操作</span>
       <span class="token literal-property property">alias</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span><span class="token string">&#39;src&#39;</span><span class="token punctuation">)</span>
       <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>优化 resolve.extensions 配置：减少文件类型后缀，缩小匹配范围。<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">resolve</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token comment">// 尽可能的减少后缀尝试的可能性</span>
       <span class="token literal-property property">extensions</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;js&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;json&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="合理利用缓存" tabindex="-1"><a class="header-anchor" href="#合理利用缓存" aria-hidden="true">#</a> 合理利用缓存</h3><h3 id="使用动态链接库" tabindex="-1"><a class="header-anchor" href="#使用动态链接库" aria-hidden="true">#</a> 使用动态链接库</h3><h3 id="使用多线程打包" tabindex="-1"><a class="header-anchor" href="#使用多线程打包" aria-hidden="true">#</a> 使用多线程打包</h3><h3 id="压缩代码" tabindex="-1"><a class="header-anchor" href="#压缩代码" aria-hidden="true">#</a> 压缩代码</h3><h3 id="使用-cdn" tabindex="-1"><a class="header-anchor" href="#使用-cdn" aria-hidden="true">#</a> 使用 cdn</h3><h3 id="分割-chunks" tabindex="-1"><a class="header-anchor" href="#分割-chunks" aria-hidden="true">#</a> 分割 chunks</h3><h3 id="按需加载模块" tabindex="-1"><a class="header-anchor" href="#按需加载模块" aria-hidden="true">#</a> 按需加载模块</h3><h3 id="分析输出结果" tabindex="-1"><a class="header-anchor" href="#分析输出结果" aria-hidden="true">#</a> 分析输出结果</h3>`,14),o=[p];function i(c,l){return a(),s("div",null,o)}const u=n(t,[["render",i],["__file","05.html.vue"]]);export{u as default};

import{_ as n,o as s,c as a,d as t}from"./app-de30dea3.js";const p={},e=t(`<h1 id="获取元素尺寸" tabindex="-1"><a class="header-anchor" href="#获取元素尺寸" aria-hidden="true">#</a> 获取元素尺寸</h1><p>在开发中，获取一个 dom 元素的尺寸可以使我们更好的了解这个元素的信息，更利于我们对元素样式进行调试以及对这个元素做其他一些操作，但某些情况下目标元素可能应用了 <code>display:none</code> 的样式，这样要获取到元素的尺寸信息就非常麻烦了。</p><h2 id="getboundingclientrect" tabindex="-1"><a class="header-anchor" href="#getboundingclientrect" aria-hidden="true">#</a> getBoundingClientRect()</h2><p><code>getBoundingClientRect()</code> 方法返回一个对象，这个对象中包含了目标元素的尺寸信息以及相对于视口的位置信息，它的返回值如下：</p><ul><li><code>x</code>：元素从视口左侧边缘到元素自身左侧边缘的距离</li><li><code>y</code>；元素从视口顶部边缘到元素自身顶部边缘的距离</li><li><code>left</code>：元素从视口左侧边缘到元素自身左侧边缘的距离</li><li><code>right</code>：元素从视口左侧边缘到元素自身右侧边缘的距离</li><li><code>top</code>：元素从视口顶部边缘到元素自身顶部边缘的距离</li><li><code>bottom</code>：元素从视口顶部边缘到元素自身底部边缘的距离</li><li><code>width</code>：元素的宽度</li><li><code>height</code>：元素的高度</li></ul><h2 id="获取元素尺寸-1" tabindex="-1"><a class="header-anchor" href="#获取元素尺寸-1" aria-hidden="true">#</a> 获取元素尺寸</h2><p>获取元素尺寸的方法具体实现如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getElementSize</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token comment">//获取元素样式属性的方法</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getStyle</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">el<span class="token punctuation">,</span>prop</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">getComputedStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPropertyValue</span><span class="token punctuation">(</span>property<span class="token punctuation">)</span>
    <span class="token comment">//获取元素是否设置了 &#39;display:none&#39; 属性</span>
    <span class="token keyword">const</span> display <span class="token operator">=</span> <span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token string">&quot;display&quot;</span><span class="token punctuation">)</span>
    
    <span class="token comment">//设置了 &#39;display:none&#39; 属性则模拟 &#39;display:none&#39; 样式来获取其尺寸信息</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>display <span class="token operator">===</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> styles <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;display&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;block&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">origin</span><span class="token operator">:</span> <span class="token function">getStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&quot;display&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;pointer-events&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">origin</span><span class="token operator">:</span> <span class="token function">getStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&quot;pointer-events&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;visibility&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;hidden&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">origin</span><span class="token operator">:</span> <span class="token function">getStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&quot;visibility&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token punctuation">{</span> <span class="token literal-property property">key</span><span class="token operator">:</span> <span class="token string">&quot;z-index&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">999</span><span class="token punctuation">,</span> <span class="token literal-property property">origin</span><span class="token operator">:</span> <span class="token function">getStyle</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&quot;z-index&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>

        <span class="token comment">// 利用visibility、z-index、pointer-events属性模拟display：none效果</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> styles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>item<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span>value
        <span class="token punctuation">}</span>

        <span class="token comment">// 获取元素尺寸信息</span>
        <span class="token keyword">const</span> rect <span class="token operator">=</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

        <span class="token comment">// 将元素样式恢复</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> item <span class="token keyword">of</span> styles<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            el<span class="token punctuation">.</span>style<span class="token punctuation">[</span>item<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> item<span class="token punctuation">.</span>origin
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> rect
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> el<span class="token punctuation">.</span><span class="token function">getBoundingClientRect</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//使用</span>
<span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&#39;el1&#39;</span><span class="token operator">&gt;</span> 普通元素 <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">&#39;el1&#39;</span> style<span class="token operator">=</span><span class="token string">&#39;display:none;&#39;</span><span class="token operator">&gt;</span> 隐藏元素 <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>

<span class="token function">getElementSize</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#le1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//rect{}</span>
<span class="token function">getElementSize</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&#39;#le2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//rect{}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","14.html.vue"]]);export{r as default};

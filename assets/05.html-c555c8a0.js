const e=JSON.parse('{"key":"v-412f5978","path":"/blog-complex/package/webpack/05.html","title":"打包优化","lang":"zh-CN","frontmatter":{"date":"2024-03-19T00:00:00.000Z","category":["综合知识"],"tag":"webpack","description":"打包优化 webpack 为我们构建现代化的前端页面提供了十分巨大的帮助。然而随着页面功能越来越复杂，项目体积越来越庞大时，webpack 的打包时间也会变得越来越长，打包体积也会越来越大，长时间的构建和大体积的文件会造成一些效率与性能上的问题。所以我们有必要了解一些 webpack 打包优化的技巧。","head":[["meta",{"property":"og:url","content":"https://wzcoding.github.io/blog/blog/blog-complex/package/webpack/05.html"}],["meta",{"property":"og:site_name","content":"wzCoding"}],["meta",{"property":"og:title","content":"打包优化"}],["meta",{"property":"og:description","content":"打包优化 webpack 为我们构建现代化的前端页面提供了十分巨大的帮助。然而随着页面功能越来越复杂，项目体积越来越庞大时，webpack 的打包时间也会变得越来越长，打包体积也会越来越大，长时间的构建和大体积的文件会造成一些效率与性能上的问题。所以我们有必要了解一些 webpack 打包优化的技巧。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-29T18:06:47.000Z"}],["meta",{"property":"article:author","content":"wzCoding"}],["meta",{"property":"article:tag","content":"webpack"}],["meta",{"property":"article:published_time","content":"2024-03-19T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-29T18:06:47.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"打包优化\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-03-19T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-29T18:06:47.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wzCoding\\",\\"url\\":\\"https://github.com/wzCoding/blog\\"}]}"]]},"headers":[{"level":2,"title":"优化技巧","slug":"优化技巧","link":"#优化技巧","children":[{"level":3,"title":"缩小搜寻范围","slug":"缩小搜寻范围","link":"#缩小搜寻范围","children":[]},{"level":3,"title":"合理利用缓存","slug":"合理利用缓存","link":"#合理利用缓存","children":[]},{"level":3,"title":"使用 DLLPlugin","slug":"使用-dllplugin","link":"#使用-dllplugin","children":[]},{"level":3,"title":"使用多线程打包","slug":"使用多线程打包","link":"#使用多线程打包","children":[]},{"level":3,"title":"压缩代码","slug":"压缩代码","link":"#压缩代码","children":[]},{"level":3,"title":"使用 CDN","slug":"使用-cdn","link":"#使用-cdn","children":[]},{"level":3,"title":"拆分 CHUNKS","slug":"拆分-chunks","link":"#拆分-chunks","children":[]},{"level":3,"title":"按需加载模块","slug":"按需加载模块","link":"#按需加载模块","children":[]}]}],"git":{"createdTime":1719243176000,"updatedTime":1719684407000,"contributors":[{"name":"wzCoding","email":"1429354968@qq.com","commits":4}]},"readingTime":{"minutes":9.02,"words":2707},"filePathRelative":"blog-complex/package/webpack/05.md","localizedDate":"2024年3月19日","excerpt":"<h1> 打包优化</h1>\\n<p>webpack 为我们构建现代化的前端页面提供了十分巨大的帮助。然而随着页面功能越来越复杂，项目体积越来越庞大时，webpack 的打包时间也会变得越来越长，打包体积也会越来越大，长时间的构建和大体积的文件会造成一些效率与性能上的问题。所以我们有必要了解一些 webpack 打包优化的技巧。</p>","autoDesc":true}');export{e as data};

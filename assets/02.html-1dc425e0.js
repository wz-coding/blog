import{_ as r,r as o,o as p,c as u,b as a,w as c,f as t,d as e,e as n}from"./app-b05cb820.js";const h={},f=t('<h1 id="弹性盒子布局" tabindex="-1"><a class="header-anchor" href="#弹性盒子布局" aria-hidden="true">#</a> 弹性盒子布局</h1><p><strong>弹性盒子</strong>，即 Flexbox（Flexible Box Layout Module）的缩写，它是专门被设计出来用于创建页面布局的一种方式，flex 布局不仅简洁、方便，而且有着良好的浏览器支持，为我们的页面布局带来了更灵活的选择</p><h2 id="基础概念" tabindex="-1"><a class="header-anchor" href="#基础概念" aria-hidden="true">#</a> 基础概念</h2><h3 id="弹性容器" tabindex="-1"><a class="header-anchor" href="#弹性容器" aria-hidden="true">#</a> 弹性容器</h3><p>要将一个容器变为弹性容器，可以直接设置容器的 <code>display</code> 属性为：<code>display : flex</code>，这样可以直接将容器转换为弹性容器，并且容器里面的直接子元素也都会转变成为弹性子元素（flex item）</p><h3 id="主轴" tabindex="-1"><a class="header-anchor" href="#主轴" aria-hidden="true">#</a> 主轴</h3><p><strong>主轴</strong>（main axis）默认是沿着水平方向延伸的轴，也是弹性子元素默认放置的方向，主轴的开始位置（即与容器边界交叉的点）称为 main start，主轴的结束位置（即与容器边界交叉的地方）称为 main end</p><h3 id="交叉轴" tabindex="-1"><a class="header-anchor" href="#交叉轴" aria-hidden="true">#</a> 交叉轴</h3><p><strong>交叉轴</strong>（cross axis）是垂直于主轴方向的轴。该轴的开始位置和结束位置被称为 cross start 和 cross end</p>',9),x=e("div",{class:"language-html line-numbers-mode","data-ext":"html"},[e("pre",{class:"language-html"},[e("code",null,[e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("div")]),n(),e("span",{class:"token attr-name"},"class"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),n("box"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),n(`
    `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("div")]),n(),e("span",{class:"token attr-name"},"class"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),n("item"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),n("item1"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("div")]),e("span",{class:"token punctuation"},">")]),n(`
    `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("div")]),n(),e("span",{class:"token attr-name"},"class"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),n("item"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),n("item2"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("div")]),e("span",{class:"token punctuation"},">")]),n(`
    `),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"<"),n("div")]),n(),e("span",{class:"token attr-name"},"class"),e("span",{class:"token attr-value"},[e("span",{class:"token punctuation attr-equals"},"="),e("span",{class:"token punctuation"},'"'),n("item"),e("span",{class:"token punctuation"},'"')]),e("span",{class:"token punctuation"},">")]),n("item3"),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("div")]),e("span",{class:"token punctuation"},">")]),n(`
`),e("span",{class:"token tag"},[e("span",{class:"token tag"},[e("span",{class:"token punctuation"},"</"),n("div")]),e("span",{class:"token punctuation"},">")]),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),k=e("div",{class:"language-css line-numbers-mode","data-ext":"css"},[e("pre",{class:"language-css"},[e("code",null,[e("span",{class:"token selector"},".box"),e("span",{class:"token punctuation"},"{"),n(`
    `),e("span",{class:"token property"},"max-height"),e("span",{class:"token punctuation"},":"),n("400px"),e("span",{class:"token punctuation"},";"),n(`
    `),e("span",{class:"token property"},"border"),e("span",{class:"token punctuation"},":"),n(" 1px solid #000"),e("span",{class:"token punctuation"},";"),n(`
    `),e("span",{class:"token property"},"display"),e("span",{class:"token punctuation"},":"),n(" flex"),e("span",{class:"token punctuation"},";"),n(`
    `),e("span",{class:"token property"},"overflow"),e("span",{class:"token punctuation"},":"),n("hidden"),e("span",{class:"token punctuation"},";"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`),e("span",{class:"token selector"},".item"),e("span",{class:"token punctuation"},"{"),n(`
    `),e("span",{class:"token property"},"width"),e("span",{class:"token punctuation"},":"),n(" 80px"),e("span",{class:"token punctuation"},";"),n(`
    `),e("span",{class:"token property"},"height"),e("span",{class:"token punctuation"},":"),n(" 80px"),e("span",{class:"token punctuation"},";"),n(`
    `),e("span",{class:"token property"},"background-color"),e("span",{class:"token punctuation"},":"),n(" orange"),e("span",{class:"token punctuation"},";"),n(`
    `),e("span",{class:"token property"},"margin"),e("span",{class:"token punctuation"},":"),n("5px"),e("span",{class:"token punctuation"},";"),n(`
    `),e("span",{class:"token property"},"text-align"),e("span",{class:"token punctuation"},":"),n("center"),e("span",{class:"token punctuation"},";"),n(`
    `),e("span",{class:"token property"},"line-height"),e("span",{class:"token punctuation"},":"),n("80px"),e("span",{class:"token punctuation"},";"),n(`
`),e("span",{class:"token punctuation"},"}"),n(`
`)])]),e("div",{class:"highlight-lines"},[e("br"),e("br"),e("br"),e("div",{class:"highlight-line"}," "),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br"),e("br")]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),m=t('<h2 id="容器属性" tabindex="-1"><a class="header-anchor" href="#容器属性" aria-hidden="true">#</a> 容器属性</h2><h3 id="flex-direction" tabindex="-1"><a class="header-anchor" href="#flex-direction" aria-hidden="true">#</a> flex-direction</h3><p><code>flex-direction</code> 属性控制弹性容器主轴的方向（容器主轴的方向决定了弹性子元素的排列方向），默认值是 <code>row</code>，可以设置以下值：</p><ul><li><code>row</code>：水平方向，与文本方向相同，起点默认在容器左侧</li><li><code>column</code>：垂直方向，与块级元素堆叠方向相同，起点默认在容器上侧</li><li><code>row-reverse</code>：水平方向反向，与文本方向相反，起点默认在容器右侧</li><li><code>column-reverse</code>：垂直方向反向，与块级元素堆叠方向相反，起点默认在容器下侧</li></ul>',4),b=t('<h3 id="flex-wrap" tabindex="-1"><a class="header-anchor" href="#flex-wrap" aria-hidden="true">#</a> flex-wrap</h3><p><code>flex-wrap</code> 属性用来控制弹性子元素是如何换行的，默认值是 <code>nowrap</code>，可以设置以下值：</p><ul><li><code>wrap</code>：换行（当一行无法放下更多的弹性子元素时，会将溢出弹性容器的那个弹性子元素换到下一行）</li><li><code>nowrap</code>：不换行（默认）</li><li><code>wrap-reverse</code>：反向换行（行为与 <code>wrap</code> 相似，但是起始行与结束行相反）</li></ul>',3),_=e("h3",{id:"flex-flow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flex-flow","aria-hidden":"true"},"#"),n(" flex-flow")],-1),g=e("p",null,[e("code",null,"flex-flow"),n(" 属性是 "),e("code",null,"flex-direction"),n(" 和 "),e("code",null,"flex-wrap"),n(" 的简写,默认值是 "),e("code",null,"row nowrap")],-1),v=t('<h3 id="justify-content" tabindex="-1"><a class="header-anchor" href="#justify-content" aria-hidden="true">#</a> justify-content</h3><p><code>justify-content</code> 属性控制弹性子元素在弹性容器主轴上的对齐方式，默认值是 <code>flex-start</code>，可以设置以下值：</p><ul><li><code>center</code>：将弹性子元素居中排列</li><li><code>flex-start</code>：将弹性子元素从行首开始排列</li><li><code>flex-end</code>：将弹性子元素从行尾开始排列</li><li><code>space-between</code>：将弹性子元素在每行均匀分配，相邻元素间距离相同，每行的第一个弹性子元素与行首对齐，最后一个与行尾对齐</li><li><code>space-around</code>：将弹性子元素在每行均匀分配，相邻元素间距离相同，每行的第一个弹性子元素与最后一个距离容器边界的距离是相邻元素间距的一半</li><li><code>space-evenly</code>：将弹性子元素在每行均匀分配，每个弹性子元素的间距都相同（包括第一个与最后一个距离容器边界的间距）</li></ul>',3),y=t('<h3 id="align-items" tabindex="-1"><a class="header-anchor" href="#align-items" aria-hidden="true">#</a> align-items</h3><p><code>align-items</code> 属性用来控制弹性子元素在弹性容器交叉轴上的对齐方式,默认值是 <code>normal</code>,可以设置以下值：</p><ul><li><code>normal</code>：在一般布局方式下，效果与 <code>stretch</code> 一样，但不适用于块级盒子跟表格</li><li><code>flex-start</code>：弹性子元素向交叉轴起点对齐</li><li><code>flex-end</code>：弹性子元素向交叉轴结终点对齐</li><li><code>center</code>：弹性子元素向交叉轴的中心对齐</li><li><code>baseline</code>：弹性子元素向基线对齐</li><li><code>stretch</code>：如果没有具体设置弹性子元素的高度，那么弹性子元素的高度会被拉伸到与容器等高</li></ul>',3),w=e("h2",{id:"子元素属性",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#子元素属性","aria-hidden":"true"},"#"),n(" 子元素属性")],-1),B=e("h3",{id:"flex-grow",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flex-grow","aria-hidden":"true"},"#"),n(" flex-grow")],-1),D=e("p",null,[e("code",null,"flex-grow"),n(" 用来控制弹性子元素在弹性容器中宽度或高度的放大比例（作用于宽度还是高度取决于容器的 "),e("code",null,"flex-direction"),n("），默认值是 0，设置负值无效")],-1),E=e("h3",{id:"flex-shrink",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#flex-shrink","aria-hidden":"true"},"#"),n(" flex-shrink")],-1),j=e("p",null,[e("code",null,"flex-shrink"),n(" 属性用来控制弹性子元素在弹性容器中的收缩比例，弹性子元素的宽度只有在默认宽度之和大于容器宽度时才会收缩，收缩的比例取决于 "),e("code",null,"flex-shrink"),n("的值，默认值是 1，不允许设置负值")],-1),C=t('<h3 id="flex-basis" tabindex="-1"><a class="header-anchor" href="#flex-basis" aria-hidden="true">#</a> flex-basis</h3><p><code>flex-basis</code> 属性用来控制弹性子元素在弹性容器中主轴方向的初始大小，默认值是 <code>auto</code>，不允许设置负值，如果在一个弹性子元素上同时设置了 <code>width</code>/<code>height</code> 与 <code>flex-basis</code>，那么 <code>flex-basis</code> 具有更高的优先级</p>',2),N=t('<h3 id="flex" tabindex="-1"><a class="header-anchor" href="#flex" aria-hidden="true">#</a> flex</h3><p><code>flex</code> 属性是 <code>flex-grow</code>、<code>flex-shrink</code>、<code>flex-basis</code> 的简写形式，默认值是 <code>0 1 auto</code>，可以使用 1/2/3 个值来指定 <code>flex</code> 属性</p>',2),V=t('<h3 id="align-self" tabindex="-1"><a class="header-anchor" href="#align-self" aria-hidden="true">#</a> align-self</h3><p><code>align-self</code> 属性用来控制弹性子元素自身在弹性容器交叉轴上的对齐方式，可以覆盖弹性容器的 <code>align-items</code> 属性设置的对齐方式，默认值是 <code>auto</code>（在块盒子或者表格、弹性容器交叉轴方向设置 <code>margin</code> 为 <code>auto</code>， 则此属性无效）</p>',2),A=e("h3",{id:"order",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#order","aria-hidden":"true"},"#"),n(" order")],-1),M=e("p",null,[e("code",null,"order"),n(" 属性用来控制弹性子元素在弹性容器中的排列顺序，使弹性子元素按照升序排列，默认值是 0（若设置了相同的 "),e("code",null,"order"),n(" 值，则按照在代码中出现的顺序进行排列）")],-1),z={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_flexible_box_layout/Basic_concepts_of_flexbox",target:"_blank",rel:"noopener noreferrer"};function F(Z,q){const l=o("CodeDemo"),s=o("Mgrid"),i=o("ExternalLinkIcon"),d=o("Minfo");return p(),u("div",null,[f,a(l,{id:"code-demo-27",type:"normal",title:"%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B",code:"eJyNj0tuAyEQRK+CyDbj4HykiDg5yWwYaEMrDD0CYhNZvruxzPizstm0VFVNvd5xl0fPJV8Z3DDtVUrfPR+o9PynD6y+GwMzjNU5juXqpTp3Qq+PhN7m0Dz5M9cpVahFBdmdlkdVOgdoXZbvQkzl6yQPFA1EyZZTYYk8GvYkhGimwTR59S/Z2sO8QBuIa09b6dAYCFXd92FxxGhFWzTZSfZ56Wi119Kg9K+N9BdMp8lTBaCogoVmjypaDPLjnM9Qcqc82iA1hAyx6R4DzGe17ysO3x8Aia+EXg=="},{default:c(()=>[x,k]),_:1}),m,a(s,{type:"flex",prop:"flex-direction"}),b,a(s,{type:"flex",prop:"flex-wrap",item:"10"}),_,g,a(s,{type:"flex",prop:"flex-flow"}),v,a(s,{type:"flex",prop:"justify-content",item:"3"}),y,a(s,{type:"flex",prop:"align-items",item:"3"}),w,B,D,a(s,{type:"flex",prop:"flex-grow",item:"1"}),E,j,a(s,{type:"flex",prop:"flex-shrink",item:"1"}),C,a(s,{type:"flex",prop:"flex-basis",item:"1"}),N,a(s,{type:"flex",prop:"flex",item:"1"}),V,a(s,{type:"flex",prop:"align-self",item:"3"}),A,M,a(s,{type:"flex",prop:"order",item:"1"}),a(d,null,{default:c(()=>[e("p",null,[n("弹性盒子布局还有很多其他属性，这里只介绍了在项目中常用的一些属性，想要了解更多弹性盒子的相关信息请 "),e("a",z,[n("点击这里"),a(i)])])]),_:1})])}const S=r(h,[["render",F],["__file","02.html.vue"]]);export{S as default};

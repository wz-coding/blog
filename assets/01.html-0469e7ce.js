const e=JSON.parse('{"key":"v-5423d3de","path":"/blog-js/async/01.html","title":"Promise","lang":"zh-CN","frontmatter":{"category":"JavaScript","tag":"Promise","prev":"/blog-js/16.md","description":"Promise JavaScript是一种单线程语言，这意味着它一次只能做一件事。然而，我们的应用程序经常需要处理多个任务，例如从服务器获取数据、处理用户输入或执行计算密集型任务。这就是我们需要异步编程的地方。在JavaScript中，Promise是处理异步操作的一种方法","head":[["meta",{"property":"og:url","content":"https://wzcoding.github.io/blog/blog/blog-js/async/01.html"}],["meta",{"property":"og:site_name","content":"wzCoding"}],["meta",{"property":"og:title","content":"Promise"}],["meta",{"property":"og:description","content":"Promise JavaScript是一种单线程语言，这意味着它一次只能做一件事。然而，我们的应用程序经常需要处理多个任务，例如从服务器获取数据、处理用户输入或执行计算密集型任务。这就是我们需要异步编程的地方。在JavaScript中，Promise是处理异步操作的一种方法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-05T09:15:38.000Z"}],["meta",{"property":"article:author","content":"wzCoding"}],["meta",{"property":"article:tag","content":"Promise"}],["meta",{"property":"article:modified_time","content":"2024-01-05T09:15:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Promise\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-05T09:15:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"wzCoding\\",\\"url\\":\\"https://github.com/wzCoding/blog\\"}]}"]]},"headers":[{"level":2,"title":"什么是Promise","slug":"什么是promise","link":"#什么是promise","children":[]},{"level":2,"title":"Promise的基本用法","slug":"promise的基本用法","link":"#promise的基本用法","children":[{"level":3,"title":"创建Promise实例","slug":"创建promise实例","link":"#创建promise实例","children":[]},{"level":3,"title":"获取Promise的结果","slug":"获取promise的结果","link":"#获取promise的结果","children":[]}]},{"level":2,"title":"Promise的链式调用","slug":"promise的链式调用","link":"#promise的链式调用","children":[]},{"level":2,"title":"Promise的静态方法","slug":"promise的静态方法","link":"#promise的静态方法","children":[{"level":3,"title":"Promise.resolve()","slug":"promise-resolve","link":"#promise-resolve","children":[]},{"level":3,"title":"Promise.reject()","slug":"promise-reject","link":"#promise-reject","children":[]},{"level":3,"title":"Promise.all()","slug":"promise-all","link":"#promise-all","children":[]},{"level":3,"title":"Promise.race()","slug":"promise-race","link":"#promise-race","children":[]},{"level":3,"title":"Promise.any()","slug":"promise-any","link":"#promise-any","children":[]},{"level":3,"title":"Promise.allSettled()","slug":"promise-allsettled","link":"#promise-allsettled","children":[]}]},{"level":2,"title":"async/await","slug":"async-await","link":"#async-await","children":[{"level":3,"title":"async","slug":"async","link":"#async","children":[]},{"level":3,"title":"await","slug":"await","link":"#await","children":[]},{"level":3,"title":"错误处理","slug":"错误处理","link":"#错误处理","children":[]}]}],"git":{"createdTime":1704216214000,"updatedTime":1704446138000,"contributors":[{"name":"wzCoding","email":"1429354968@qq.com","commits":3}]},"readingTime":{"minutes":8.96,"words":2689},"filePathRelative":"blog-js/async/01.md","localizedDate":"2024年1月2日","excerpt":"<h1> Promise</h1>\\n<p>JavaScript是一种单线程语言，这意味着它一次只能做一件事。然而，我们的应用程序经常需要处理多个任务，例如从服务器获取数据、处理用户输入或执行计算密集型任务。这就是我们需要异步编程的地方。在JavaScript中，Promise是处理异步操作的一种方法</p>","autoDesc":true}');export{e as data};

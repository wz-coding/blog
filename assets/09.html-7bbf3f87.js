import{_ as a,o as e,c as r,d as t}from"./app-6a9f7bc1.js";const d={},c=t('<h1 id="原型与原型链" tabindex="-1"><a class="header-anchor" href="#原型与原型链" aria-hidden="true">#</a> 原型与原型链</h1><p>原型和原型链是对象上的一个重要的特性，它们是 JavaScript 中实现继承和共享属性的基础。</p><h2 id="原型" tabindex="-1"><a class="header-anchor" href="#原型" aria-hidden="true">#</a> 原型</h2><p>每个对象都有一个原型对象，可以通过<code>__proto__</code>属性访问。原型对象本身也有一个原型对象，以此类推，形成一个原型链。</p><h2 id="原型链" tabindex="-1"><a class="header-anchor" href="#原型链" aria-hidden="true">#</a> 原型链</h2><p>原型链是一种由原型对象组成的链式结构，用于实现继承和共享属性。当访问一个对象的属性时，JavaScript会首先在当前对象中查找，如果没有找到，则会沿着原型链向上查找，直到找到为止。</p><h2 id="原型链的用途" tabindex="-1"><a class="header-anchor" href="#原型链的用途" aria-hidden="true">#</a> 原型链的用途</h2>',7),h=[c];function i(n,o){return e(),r("div",null,h)}const _=a(d,[["render",i],["__file","09.html.vue"]]);export{_ as default};
